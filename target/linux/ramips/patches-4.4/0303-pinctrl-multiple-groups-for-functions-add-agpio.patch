diff -Naur a/arch/mips/include/asm/mach-ralink/pinmux.h b/arch/mips/include/asm/mach-ralink/pinmux.h
--- a/arch/mips/include/asm/mach-ralink/pinmux.h	2016-07-04 10:15:04.232391006 -0500
+++ b/arch/mips/include/asm/mach-ralink/pinmux.h	2016-07-04 09:43:11.872082109 -0500
@@ -33,6 +33,7 @@
 	int *pins;
 
 	int *groups;
+	int **group_names;
 	int group_count;
 
 	int enabled;
diff -Naur a/arch/mips/ralink/mt7620.c b/arch/mips/ralink/mt7620.c
--- a/arch/mips/ralink/mt7620.c	2016-07-04 10:15:52.649309331 -0500
+++ b/arch/mips/ralink/mt7620.c	2016-07-04 09:43:52.872876357 -0500
@@ -176,7 +176,7 @@
 
 static struct rt2880_pmx_func spis_grp_mt7628[] = {
 	FUNC("pwm", 3, 14, 4),
-	FUNC("utif", 2, 14, 4),
+	FUNC("util", 2, 14, 4),
 	FUNC("gpio", 1, 14, 4),
 	FUNC("spis", 0, 14, 4),
 };
@@ -190,28 +190,28 @@
 
 static struct rt2880_pmx_func p4led_kn_grp_mt7628[] = {
 	FUNC("jtag", 3, 30, 1),
-	FUNC("utif", 2, 30, 1),
+	FUNC("util", 2, 30, 1),
 	FUNC("gpio", 1, 30, 1),
 	FUNC("p4led_kn", 0, 30, 1),
 };
 
 static struct rt2880_pmx_func p3led_kn_grp_mt7628[] = {
 	FUNC("jtag", 3, 31, 1),
-	FUNC("utif", 2, 31, 1),
+	FUNC("util", 2, 31, 1),
 	FUNC("gpio", 1, 31, 1),
 	FUNC("p3led_kn", 0, 31, 1),
 };
 
 static struct rt2880_pmx_func p2led_kn_grp_mt7628[] = {
 	FUNC("jtag", 3, 32, 1),
-	FUNC("utif", 2, 32, 1),
+	FUNC("util", 2, 32, 1),
 	FUNC("gpio", 1, 32, 1),
 	FUNC("p2led_kn", 0, 32, 1),
 };
 
 static struct rt2880_pmx_func p1led_kn_grp_mt7628[] = {
 	FUNC("jtag", 3, 33, 1),
-	FUNC("utif", 2, 33, 1),
+	FUNC("util", 2, 33, 1),
 	FUNC("gpio", 1, 33, 1),
 	FUNC("p1led_kn", 0, 33, 1),
 };
@@ -232,28 +232,28 @@
 
 static struct rt2880_pmx_func p4led_an_grp_mt7628[] = {
 	FUNC("jtag", 3, 39, 1),
-	FUNC("utif", 2, 39, 1),
+	FUNC("util", 2, 39, 1),
 	FUNC("gpio", 1, 39, 1),
 	FUNC("p4led_an", 0, 39, 1),
 };
 
 static struct rt2880_pmx_func p3led_an_grp_mt7628[] = {
 	FUNC("jtag", 3, 40, 1),
-	FUNC("utif", 2, 40, 1),
+	FUNC("util", 2, 40, 1),
 	FUNC("gpio", 1, 40, 1),
 	FUNC("p3led_an", 0, 40, 1),
 };
 
 static struct rt2880_pmx_func p2led_an_grp_mt7628[] = {
 	FUNC("jtag", 3, 41, 1),
-	FUNC("utif", 2, 41, 1),
+	FUNC("util", 2, 41, 1),
 	FUNC("gpio", 1, 41, 1),
 	FUNC("p2led_an", 0, 41, 1),
 };
 
 static struct rt2880_pmx_func p1led_an_grp_mt7628[] = {
 	FUNC("jtag", 3, 42, 1),
-	FUNC("utif", 2, 42, 1),
+	FUNC("util", 2, 42, 1),
 	FUNC("gpio", 1, 42, 1),
 	FUNC("p1led_an", 0, 42, 1),
 };
@@ -272,7 +272,16 @@
 	FUNC("wled_an", 0, 44, 1),
 };
 
+static struct rt2880_pmx_func agpio_grp_mt7628[] = {
+	FUNC("sd", 1, 0, 0 ),
+	FUNC("uart2", 1, 0, 0),
+	FUNC("pwm0", 1, 0, 0),
+	FUNC("pwm1", 1, 0, 0),
+	FUNC("spis", 1, 0, 0),
+};
+
 #define MT7628_GPIO_MODE_MASK		0x3
+#define MT7628_AGPIO_MODE_MASK		0x1
 
 #define MT7628_GPIO_MODE_P4LED_KN	58
 #define MT7628_GPIO_MODE_P3LED_KN	56
@@ -301,6 +310,7 @@
 #define MT7628_GPIO_MODE_CS1		4
 #define MT7628_GPIO_MODE_SPIS		2
 #define MT7628_GPIO_MODE_GPIO		0
+#define MT7628_AGPIO_MODE_DIS		81
 
 static struct rt2880_pmx_group mt7628an_pinmux_data[] = {
 	GRP_G("pwm1", pwm1_grp_mt7628, MT7628_GPIO_MODE_MASK,
@@ -353,6 +363,8 @@
 				1, MT7628_GPIO_MODE_P3LED_KN),
 	GRP_G("p4led_kn", p4led_kn_grp_mt7628, MT7628_GPIO_MODE_MASK,
 				1, MT7628_GPIO_MODE_P4LED_KN),
+	GRP_G("agpio", agpio_grp_mt7628, MT7628_AGPIO_MODE_MASK,
+				1, MT7628_AGPIO_MODE_DIS),
 	{ 0 }
 };
 
@@ -526,8 +538,8 @@
 		periph_rate = MHZ(40);
 		pcmi2s_rate = MHZ(480);
 
-		ralink_clk_add("10000d00.uartlite", periph_rate);
-		ralink_clk_add("10000e00.uartlite", periph_rate);
+		ralink_clk_add("10000d00.uart1", periph_rate);
+		ralink_clk_add("10000e00.uart2", periph_rate);
 	} else {
 		cpu_pll_rate = mt7620_get_cpu_pll_rate(xtal_rate);
 		pll_rate = mt7620_get_pll_rate(xtal_rate, cpu_pll_rate);
diff -Naur a/drivers/pinctrl/pinctrl-rt2880.c b/drivers/pinctrl/pinctrl-rt2880.c
--- a/drivers/pinctrl/pinctrl-rt2880.c	2016-07-04 10:16:13.173698862 -0500
+++ b/drivers/pinctrl/pinctrl-rt2880.c	2016-07-04 09:44:56.418106841 -0500
@@ -28,6 +28,7 @@
 
 #define SYSC_REG_GPIO_MODE	0x60
 #define SYSC_REG_GPIO_MODE2	0x64
+#define SYSC_REG_AGPIO_MODE	0x3C
 
 struct rt2880_priv {
 	struct device *dev;
@@ -46,6 +47,8 @@
 	int max_pins;
 };
 
+/*struct rt2880_pmx_group *rt2880_pinmux_data = NULL;*/
+
 static int rt2880_get_group_count(struct pinctrl_dev *pctrldev)
 {
 	struct rt2880_priv *p = pinctrl_dev_get_drvdata(pctrldev);
@@ -187,11 +190,8 @@
 {
 	struct rt2880_priv *p = pinctrl_dev_get_drvdata(pctrldev);
 
-	if (p->func[func]->group_count == 1)
-		*groups = &p->group_names[p->func[func]->groups[0]];
-	else
-		*groups = p->group_names;
-
+	if (p->func[func]->group_count != 0)
+		*groups = p->func[func]->group_names;
 	*num_groups = p->func[func]->group_count;
 
 	return 0;
@@ -204,8 +204,9 @@
 	struct rt2880_priv *p = pinctrl_dev_get_drvdata(pctrldev);
         u32 mode = 0;
 	u32 reg = SYSC_REG_GPIO_MODE;
-	int i;
+	int i, j;
 	int shift;
+	int group_func;
 
 	/* dont allow double use */
 	if (p->groups[group].enabled) {
@@ -217,9 +218,12 @@
 	p->func[func]->enabled = 1;
 
 	shift = p->groups[group].shift;
-	if (shift >= 32) {
+	if (shift >= 32 && shift < 64) {
 		shift -= 32;
 		reg = SYSC_REG_GPIO_MODE2;
+	}else if (shift >= 64) {
+		shift -= 64;
+		reg = SYSC_REG_AGPIO_MODE;
 	}
 	mode = rt_sysc_r32(reg);
 	mode &= ~(p->groups[group].mask << shift);
@@ -232,9 +236,15 @@
 	if (func == 0) {
 		mode |= p->groups[group].gpio << shift;
 	} else {
-		for (i = 0; i < p->func[func]->pin_count; i++)
-			p->gpio[p->func[func]->pins[i]] = 0;
-		mode |= p->func[func]->value << shift;
+		for (j = 0; j < p->groups[group].func_count; j++){
+			if (strcmp(p->groups[group].func[j].name, p->func[func]->name) == 0){
+				group_func = j;
+				for (i = 0; i < p->func[func]->pin_count; i++)
+					p->gpio[p->func[func]->pins[i]] = 0;
+		
+			}
+		}
+		mode |= p->groups[group].func[group_func].value << shift;
 	}
 	rt_sysc_w32(mode, reg);
 
@@ -317,12 +327,30 @@
 	for (i = 0; i < p->group_count; i++) {
 		for (j = 0; j < p->groups[i].func_count; j++) {
 			f[c] = &p->groups[i].func[j];
-			f[c]->groups = devm_kzalloc(p->dev, sizeof(int), GFP_KERNEL);
+			f[c]->groups = devm_kzalloc(p->dev, sizeof(int) * p->group_count, GFP_KERNEL);
+			if (!f[c]->groups)
+				return -1;
+			f[c]->group_names = devm_kzalloc(p->dev, sizeof(char *) * p->group_count, GFP_KERNEL);
+			if (!f[c]->group_names)
+				return -1;
 			f[c]->groups[0] = i;
 			f[c]->group_count = 1;
 			c++;
 		}
 	}
+	f[0]->group_names = p->group_names;
+	for (c = 1; c < p->func_count; c++) {
+		f[c]->group_count = 0;
+		for (i = 0; i < p->group_count; i++) {
+			for (j = 0; j < p->groups[i].func_count; j++) {
+				if (strcmp(f[c]->name, p->groups[i].func[j].name) == 0) {
+					f[c]->groups[f[c]->group_count] = i;
+					f[c]->group_names[f[c]->group_count] = p->groups[i].name;
+					f[c]->group_count++;
+				}
+			}
+		}
+	}
 	return 0;
 }
 
@@ -445,7 +473,6 @@
 		range->pin_base = range->base;
 		pinctrl_add_gpio_range(dev, range);
 	}
-
 	return 0;
 }
 
